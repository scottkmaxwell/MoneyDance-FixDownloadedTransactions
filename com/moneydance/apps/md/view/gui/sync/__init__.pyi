from typing import List
import com.moneydance.apps.md.controller
import com.moneydance.apps.md.controller.sync
import com.moneydance.apps.md.view.gui


class SyncFolderConfigurer:
    def __init__(self): ...
    
    def addListener(self, s: str) -> None: ...
    
    def canConnect(self) -> bool: ...
    
    def canDisconnect(self) -> bool: ...
    
    def disconnect(self) -> None: ...
    
    def getAccountWrapper(self) -> com.moneydance.apps.md.controller.AccountBookWrapper: ...
    
    def getConnected(self) -> None: ...
    
    def getConnectionInfoLabel(self) -> str: ...
    
    def getConnectionLabel(self) -> str: ...
    
    def getConnectionState(self) -> str: ...
    
    def getSecondarySubpath(self) -> str: ...
    
    def getSecondarySyncFolder(self) -> com.moneydance.apps.md.controller.sync.AbstractSyncFolder: ...
    
    def getSubpath(self) -> str: ...
    
    def getSyncFolder(self) -> com.moneydance.apps.md.controller.sync.AbstractSyncFolder: ...
    
    def getSyncMethodID(self) -> str: ...
    
    def getSyncMethodIcon(self) -> 'javax.swing.Icon': ...
    
    def getSyncMethodInstructions(self) -> str: ...
    
    def isConnected(self) -> bool: ...
    
    def listAvailableExistingSyncFolders(self) -> List[com.moneydance.apps.md.controller.sync.AbstractSyncFolder]: ...
    
    def loadConnectionSettings(self) -> None: ...
    
    def removeListener(self, s: str) -> None: ...
    
    def saveConnectionSettings(self) -> None: ...
    
    def setSecondarySubpath(self, s: str) -> None: ...
    
    def setSubpath(self, s: str) -> None: ...
    
    def syncingStopped(self) -> None: ...
    
    def toString(self) -> str: ...
    
    
    class ConnectionState:
        AUTHENTICATING = 'AUTHENTICATING'
        CONNECTED = 'CONNECTED'
        CONNECTING = 'CONNECTING'
        NOT_CONNECTED = 'NOT_CONNECTED'
        
        def __init__(self): ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> List[str]: ...
        
        
    class SyncFolderConfigurationListener:
        def __init__(self): ...
        
        def syncFolderConfigurationUpdated(self, syncFolderConfigurer: 'SyncFolderConfigurer') -> None: ...
        
        
    
class DropboxSyncConfigurer(SyncFolderConfigurer):
    APP_KEY = u'g032w85g2yh1fn9'
    APP_SECRET = u'0r426111eoj4hfk'
    SYNC_TYPE = u'dropbox_api'
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.moneydance.apps.md.controller.AccountBookWrapper): ...
    
    def canConnect(self) -> bool: ...
    
    def canDisconnect(self) -> bool: ...
    
    def disconnect(self) -> None: ...
    
    def getConnected(self) -> None: ...
    
    def getConnectionInfoLabel(self) -> str: ...
    
    def getConnectionLabel(self) -> str: ...
    
    def getSyncFolder(self) -> com.moneydance.apps.md.controller.sync.AbstractSyncFolder: ...
    
    def getSyncMethodID(self) -> str: ...
    
    def getSyncMethodIcon(self) -> 'javax.swing.Icon': ...
    
    def getSyncMethodInstructions(self) -> str: ...
    
    def isConnected(self) -> bool: ...
    
    def syncingStopped(self) -> None: ...
    
    
class GenericFSSyncConfigurer(SyncFolderConfigurer):
    DROPBOX_FS_SYNC_TYPE = u'dropbox_folder'
    NETSYNC_SHARE_PATH = u'netsync.fs.sync_path'
    SYNC_TYPE = u'shared_folder'
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.moneydance.apps.md.controller.AccountBookWrapper): ...
    
    def canConnect(self) -> bool: ...
    
    def configureForDropboxFolder(self) -> bool: ...
    
    def configureForiCloudFolder(self) -> bool: ...
    
    def disconnect(self) -> None: ...
    
    @staticmethod
    def dropboxFolderIsAccessible() -> bool: ...
    
    def getConnected(self) -> None: ...
    
    def getConnectionLabel(self) -> str: ...
    
    def getSyncFolder(self) -> com.moneydance.apps.md.controller.sync.AbstractSyncFolder: ...
    
    def getSyncMethodID(self) -> str: ...
    
    def getSyncMethodInstructions(self) -> str: ...
    
    def isConnected(self) -> bool: ...
    
    
class NoSyncConfigurer(SyncFolderConfigurer):
    SYNC_TYPE = u'none'
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.moneydance.apps.md.controller.AccountBookWrapper): ...
    
    def canConnect(self) -> bool: ...
    
    def getConnected(self) -> None: ...
    
    def getSyncFolder(self) -> com.moneydance.apps.md.controller.sync.AbstractSyncFolder: ...
    
    def getSyncMethodID(self) -> str: ...
    
    def getSyncMethodIcon(self) -> 'javax.swing.Icon': ...
    
    def getSyncMethodInstructions(self) -> str: ...
    
    def isConnected(self) -> bool: ...
    
    def toString(self) -> str: ...
    
    
class SecondarySyncSettingsWindow(com.moneydance.apps.md.view.gui.SecondaryDialog):
    pass
    
class SyncFolderUtil:
    def __init__(self): ...
    
    @staticmethod
    def configurerForIDFromList(s: str, list: List[SyncFolderConfigurer]) -> SyncFolderConfigurer: ...
    
    @staticmethod
    def getAvailableFolderConfigurers(c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.moneydance.apps.md.controller.AccountBookWrapper) -> List[SyncFolderConfigurer]: ...
    
    def getBestDropboxFolder(self, list: List[SyncFolderConfigurer]) -> SyncFolderConfigurer: ...
    
    @staticmethod
    def getConfigurerForFile(c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.moneydance.apps.md.controller.AccountBookWrapper, list: List[SyncFolderConfigurer]) -> SyncFolderConfigurer: ...
    
    
