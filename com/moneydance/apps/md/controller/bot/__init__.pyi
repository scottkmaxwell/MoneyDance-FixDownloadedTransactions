from typing import Dict, List
import com.infinitekind.moneydance.model


class MoneybotInterface:
    def __init__(self): ...
    
    def accountsWithType(self, s: str) -> List[com.infinitekind.moneydance.model.Account]: ...
    
    def closeWebBot(self) -> None: ...
    
    def getAccountForID(self, s: str) -> com.infinitekind.moneydance.model.Account: ...
    
    def getField(self, o: object, s: str, s2: str, s3: str, s4: str, b: bool) -> str: ...
    
    def getWebBot(self) -> 'RobotWebSession': ...
    
    def setField(self, o: object, s: str, s2: str, b: bool) -> None: ...
    
    
class RobotWebNode:
    def __init__(self): ...
    
    def getText(self) -> str: ...
    
    def isEnabled(self) -> bool: ...
    
    def subelements(self) -> List['RobotWebNode']: ...
    
    
class RobotWebPage:
    def __init__(self): ...
    
    def getHeaders(self) -> Dict[str,List[str]]: ...
    
    def getPageContents(self) -> str: ...
    
    def getPageURL(self) -> str: ...
    
    
class RobotWebSession:
    def __init__(self): ...
    
    def beginCollectingPages(self, s: str, s2: str, s3: str, b: bool) -> None: ...
    
    def clickItemWithLinkText(self, s: str) -> bool: ...
    
    def clickItemWithXPath(self, s: str) -> bool: ...
    
    def getCollectedPages(self) -> List[RobotWebPage]: ...
    
    def getHTML(self) -> str: ...
    
    def getRootNode(self) -> RobotWebNode: ...
    
    def loadURL(self, s: str) -> None: ...
    
    def nodeForXPath(self, s: str) -> RobotWebNode: ...
    
    def nodesForXPath(self, s: str) -> List[RobotWebNode]: ...
    
    def reportError(self, s: str) -> None: ...
    
    def setImplicitWait(self, f: float) -> None: ...
    
    def setImportKnownFiles(self, b: bool) -> None: ...
    
    def setValueForNode(self, robotWebNode: RobotWebNode, s: str) -> bool: ...
    
    def setValueForXPath(self, s: str, s2: str) -> bool: ...
    
    def waitForLoadCompletion(self, f: float) -> None: ...
    
    
