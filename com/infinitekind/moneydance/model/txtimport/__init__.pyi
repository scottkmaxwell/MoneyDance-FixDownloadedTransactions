from typing import List
import com.infinitekind.moneydance.model
import com.infinitekind.moneydance.online


class FlexibleDateParser:
    def __init__(self, importDateFieldOrder: 'ImportDateFieldOrder', s: str): ...
    
    def getActualDateFieldOrder(self) -> 'ImportDateFieldOrder': ...
    
    def getOriginalValues(self) -> List[str]: ...
    
    def getParsedDate(self) -> int: ...
    
    
class ImportDataSourceType('java.lang.Enum'):
    DOWNLOADED = 'DOWNLOADED'
    MIGRATED_FROM_ANOTHER_APP = 'MIGRATED_FROM_ANOTHER_APP'
    
    def __init__(self): ...
    
    @staticmethod
    def valueOf(s: str) -> 'ImportDataSourceType': ...
    
    @staticmethod
    def values() -> List['ImportDataSourceType']: ...
    
    
class ImportDateFieldOrder('java.lang.Enum'):
    DMY = 'DMY'
    DYM = 'DYM'
    MDY = 'MDY'
    MYD = 'MYD'
    YDM = 'YDM'
    YMD = 'YMD'
    
    def __init__(self): ...
    
    @staticmethod
    def allFields() -> List['ImportDateFieldOrder']: ...
    
    @staticmethod
    def fromLocale() -> 'ImportDateFieldOrder': ...
    
    def getDateFieldList(self) -> List[str]: ...
    
    def getID(self) -> str: ...
    
    @staticmethod
    def valueForID(s: str) -> 'ImportDateFieldOrder': ...
    
    @staticmethod
    def valueForYMDIndexes(i: int, i2: int, i3: int) -> 'ImportDateFieldOrder': ...
    
    @staticmethod
    def valueOf(s: str) -> 'ImportDateFieldOrder': ...
    
    @staticmethod
    def values() -> List['ImportDateFieldOrder']: ...
    
    
class ImportFieldType('java.lang.Enum'):
    AMOUNT = 'AMOUNT'
    BALANCE = 'BALANCE'
    CATEGORY = 'CATEGORY'
    CHECKNUM = 'CHECKNUM'
    CREDIT_AMOUNT = 'CREDIT_AMOUNT'
    DATE = 'DATE'
    DEBIT_AMOUNT = 'DEBIT_AMOUNT'
    DESCRIPTION = 'DESCRIPTION'
    IGNORE = 'IGNORE'
    MEMO = 'MEMO'
    STATUS = 'STATUS'
    
    def __init__(self): ...
    
    @staticmethod
    def allFields() -> List['ImportFieldType']: ...
    
    @staticmethod
    def defaultImportFields() -> List['ImportFieldType']: ...
    
    def getTypeID(self) -> str: ...
    
    @staticmethod
    def valueForTypeID(s: str) -> 'ImportFieldType': ...
    
    @staticmethod
    def valueOf(s: str) -> 'ImportFieldType': ...
    
    @staticmethod
    def values() -> List['ImportFieldType']: ...
    
    
class TabularTextImportSpec:
    IMPORTABLE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.txtimport.TabularTextImportSpec$1@678fa8f8'
    
    def __init__(self, c: com.infinitekind.moneydance.model.AccountBook, c2: com.infinitekind.moneydance.online.OnlineBankingUI): ...
    
    def duplicate(self) -> 'TabularTextImportSpec': ...
    
    def getAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getBook(self) -> com.infinitekind.moneydance.model.AccountBook: ...
    
    def getDataSourceType(self) -> ImportDataSourceType: ...
    
    def getDateFieldOrder(self) -> ImportDateFieldOrder: ...
    
    def getDecimalPoint(self) -> int: ...
    
    def getDelimiter(self) -> int: ...
    
    def getFields(self) -> List[ImportFieldType]: ...
    
    def getPreScanMode(self) -> bool: ...
    
    def getShouldConfirmTransactions(self) -> bool: ...
    
    def getShouldMergeTransactions(self) -> bool: ...
    
    def getUIProxy(self) -> com.infinitekind.moneydance.online.OnlineBankingUI: ...
    
    def setAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def setDataSourceType(self, importDataSourceType: ImportDataSourceType) -> None: ...
    
    def setDateFieldOrder(self, importDateFieldOrder: ImportDateFieldOrder) -> None: ...
    
    def setDecimalPoint(self, i: int) -> None: ...
    
    def setDelimiter(self, i: int) -> None: ...
    
    def setFields(self, list: List[ImportFieldType]) -> None: ...
    
    def setPreScanMode(self, b: bool) -> None: ...
    
    def setShouldConfirmTransactions(self, b: bool) -> None: ...
    
    def setShouldMergeTransactions(self, b: bool) -> None: ...
    
    def takeSettingsFrom(self, tabularTextImportSpec: 'TabularTextImportSpec') -> None: ...
    
    def toString(self) -> str: ...
    
    
    class DateField:
        DAY = 'DAY'
        MONTH = 'MONTH'
        YEAR = 'YEAR'
        
        def __init__(self): ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> List[str]: ...
        
        
    
class TabularTextImporter:
    DEFAULT_DELIMITERS = '[\t,  , ,, ., |, /, \\, -, _, *, ~, ;]'
    IMPORTABLE_TEXT_FILE_EXTENSIONS = '[csv, tsv, txt, text]'
    
    def __init__(self, c: com.infinitekind.moneydance.model.AccountBook, tabularTextImportSpec: TabularTextImportSpec): ...
    
    def getDiscoveredSpec(self) -> TabularTextImportSpec: ...
    
    def performImport(self, j: 'java.io.Reader') -> None: ...
    
    
